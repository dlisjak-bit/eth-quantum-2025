A = operations_raw = [
    [
        ("RX", 0.024543688364597013, 0),
        ("RY", 1.5707963173527333, 0),
        ("MS", 1.5707963267948966, [1, 0]),
        ("RX", -1.5707963280748842, 0),
        ("RY", 1.5707963280748842, 0),
        ("MS", 1.5707963267948966, [1, 0]),
        ("RX", -1.5707963340356508, 0),
        ("RY", -0.7853981695598105, 0),
        ("MS", 1.5707963267948966, [2, 0]),
        ("RX", -1.5707963301374783, 0),
        ("RY", 0.7853981582156461, 0),
        ("MS", 1.5707963267948966, [2, 0]),
        ("RX", -1.5707963342929192, 0),
        ("RY", -0.39269908866409564, 0),
        ("MS", 1.5707963267948966, [3, 0]),
        ("RX", -1.5707963262626867, 0),
        ("RY", 0.3926990780625495, 0),
        ("MS", 1.5707963267948966, [3, 0]),
        ("RX", -1.5707963367316065, 0),
        ("RY", -0.19634954435153912, 0),
        ("MS", 1.5707963267948966, [4, 0]),
        ("RX", -1.5707963341635782, 0),
        ("RY", 0.19634953347333703, 0),
        ("MS", 1.5707963267948966, [4, 0]),
        ("RX", -1.5707963291914615, 0),
        ("RY", -0.09817476694813419, 0),
        ("MS", 1.5707963267948966, [5, 0]),
        ("RX", -1.570796334245162, 0),
        ("RY", 0.09817476297392279, 0),
        ("MS", 1.5707963267948966, [5, 0]),
        ("RX", -1.5707963285068935, 0),
        ("RY", -0.04908738398798296, 0),
        ("MS", 1.5707963267948966, [6, 0]),
        ("RX", -1.5707963268994758, 0),
        ("RY", 0.04908737776632521, 0),
        ("MS", 1.5707963267948966, [6, 0]),
        ("RX", -1.5707963341869307, 0),
        ("RY", -0.024543696565959793, 0),
        ("MS", 1.5707963267948966, [7, 0]),
        ("RX", -1.5707963242599559, 0),
        ("RY", 0.024543689290526898, 0),
        ("MS", 1.5707963267948966, [7, 0]),
        ("RX", -1.5707963305397592, 0),
        ("RY", 0.0, 0),
    ],
    [
        ("RX", 0.024543688364597013, 1),
        ("RY", 1.5707963173527333, 1),
        ("MS", 1.5707963267948966, [1, 0]),
        ("RX", -1.5707963291742124, 1),
        ("RY", 0.0, 1),
        ("MS", 1.5707963267948966, [1, 0]),
        ("RX", 1.5707963198137818, 1),
        ("RY", 1.5707963198137818, 1),
        ("MS", 1.5707963267948966, [2, 1]),
        ("RX", -1.5707963280748842, 1),
        ("RY", 1.5707963280748842, 1),
        ("MS", 1.5707963267948966, [2, 1]),
        ("RX", -1.5707963340356508, 1),
        ("RY", -0.7853981695598105, 1),
        ("MS", 1.5707963267948966, [3, 1]),
        ("RX", -1.5707963301374783, 1),
        ("RY", 0.7853981582156461, 1),
        ("MS", 1.5707963267948966, [3, 1]),
        ("RX", -1.5707963342929192, 1),
        ("RY", -0.39269908866409564, 1),
        ("MS", 1.5707963267948966, [4, 1]),
        ("RX", -1.5707963262626867, 1),
        ("RY", 0.3926990780625495, 1),
        ("MS", 1.5707963267948966, [4, 1]),
        ("RX", -1.5707963367316065, 1),
        ("RY", -0.19634954435153912, 1),
        ("MS", 1.5707963267948966, [5, 1]),
        ("RX", -1.5707963341635782, 1),
        ("RY", 0.19634953347333703, 1),
        ("MS", 1.5707963267948966, [5, 1]),
        ("RX", -1.5707963291914615, 1),
        ("RY", -0.09817476694813419, 1),
        ("MS", 1.5707963267948966, [6, 1]),
        ("RX", -1.570796334245162, 1),
        ("RY", 0.09817476297392279, 1),
        ("MS", 1.5707963267948966, [6, 1]),
        ("RX", -1.5707963285068935, 1),
        ("RY", -0.04908738398798296, 1),
        ("MS", 1.5707963267948966, [7, 1]),
        ("RX", -1.5707963268994758, 1),
        ("RY", 0.04908737776632521, 1),
        ("MS", 1.5707963267948966, [7, 1]),
        ("RX", -1.5707963305397592, 1),
        ("RY", 0.0, 1),
    ],
    [
        ("RX", 0.024543688364597013, 2),
        ("RY", 1.5707963173527333, 2),
        ("MS", 1.5707963267948966, [2, 0]),
        ("RX", -1.5707963291742124, 2),
        ("RY", 0.0, 2),
        ("MS", 1.5707963267948966, [2, 0]),
        ("RX", 0.0, 2),
        ("RY", 0.0, 2),
        ("MS", 1.5707963267948966, [2, 1]),
        ("RX", -1.5707963291742124, 2),
        ("RY", 0.0, 2),
        ("MS", 1.5707963267948966, [2, 1]),
        ("RX", 1.5707963198137818, 2),
        ("RY", 1.5707963198137818, 2),
        ("MS", 1.5707963267948966, [3, 2]),
        ("RX", -1.5707963280748842, 2),
        ("RY", 1.5707963280748842, 2),
        ("MS", 1.5707963267948966, [3, 2]),
        ("RX", -1.5707963340356508, 2),
        ("RY", -0.7853981695598105, 2),
        ("MS", 1.5707963267948966, [4, 2]),
        ("RX", -1.5707963301374783, 2),
        ("RY", 0.7853981582156461, 2),
        ("MS", 1.5707963267948966, [4, 2]),
        ("RX", -1.5707963342929192, 2),
        ("RY", -0.39269908866409564, 2),
        ("MS", 1.5707963267948966, [5, 2]),
        ("RX", -1.5707963262626867, 2),
        ("RY", 0.3926990780625495, 2),
        ("MS", 1.5707963267948966, [5, 2]),
        ("RX", -1.5707963367316065, 2),
        ("RY", -0.19634954435153912, 2),
        ("MS", 1.5707963267948966, [6, 2]),
        ("RX", -1.5707963341635782, 2),
        ("RY", 0.19634953347333703, 2),
        ("MS", 1.5707963267948966, [6, 2]),
        ("RX", -1.5707963291914615, 2),
        ("RY", -0.09817476694813419, 2),
        ("MS", 1.5707963267948966, [7, 2]),
        ("RX", -1.570796334245162, 2),
        ("RY", 0.09817476297392279, 2),
        ("MS", 1.5707963267948966, [7, 2]),
        ("RX", -1.5707963305397592, 2),
        ("RY", 0.0, 2),
    ],
    [
        ("RX", 0.024543688364597013, 3),
        ("RY", 1.5707963173527333, 3),
        ("MS", 1.5707963267948966, [3, 0]),
        ("RX", -1.5707963291742124, 3),
        ("RY", 0.0, 3),
        ("MS", 1.5707963267948966, [3, 0]),
        ("RX", -0.7853981632740932, 3),
        ("RY", -8.159136024436953e-09, 3),
        ("MS", 1.5707963267948966, [3, 1]),
        ("RX", -1.5707963291742124, 3),
        ("RY", 0.0, 3),
        ("MS", 1.5707963267948966, [3, 1]),
        ("RX", 0.0, 3),
        ("RY", 0.0, 3),
        ("MS", 1.5707963267948966, [3, 2]),
        ("RX", -1.5707963291742124, 3),
        ("RY", 0.0, 3),
        ("MS", 1.5707963267948966, [3, 2]),
        ("RX", 1.5707963198137818, 3),
        ("RY", 1.5707963198137818, 3),
        ("MS", 1.5707963267948966, [4, 3]),
        ("RX", -1.5707963280748842, 3),
        ("RY", 1.5707963280748842, 3),
        ("MS", 1.5707963267948966, [4, 3]),
        ("RX", -1.5707963340356508, 3),
        ("RY", -0.7853981695598105, 3),
        ("MS", 1.5707963267948966, [5, 3]),
        ("RX", -1.5707963301374783, 3),
        ("RY", 0.7853981582156461, 3),
        ("MS", 1.5707963267948966, [5, 3]),
        ("RX", -1.5707963342929192, 3),
        ("RY", -0.39269908866409564, 3),
        ("MS", 1.5707963267948966, [6, 3]),
        ("RX", -1.5707963262626867, 3),
        ("RY", 0.3926990780625495, 3),
        ("MS", 1.5707963267948966, [6, 3]),
        ("RX", -1.5707963367316065, 3),
        ("RY", -0.19634954435153912, 3),
        ("MS", 1.5707963267948966, [7, 3]),
        ("RX", -1.5707963341635782, 3),
        ("RY", 0.19634953347333703, 3),
        ("MS", 1.5707963267948966, [7, 3]),
        ("RX", -1.5707963305397592, 3),
        ("RY", 0.0, 3),
    ],
    [
        ("RX", 0.024543688364597013, 4),
        ("RY", 1.5707963173527333, 4),
        ("MS", 1.5707963267948966, [4, 0]),
        ("RX", -1.5707963291742124, 4),
        ("RY", 0.0, 4),
        ("MS", 1.5707963267948966, [4, 0]),
        ("RX", -1.1780972517962207, 4),
        ("RY", -7.261321924436939e-09, 4),
        ("MS", 1.5707963267948966, [4, 1]),
        ("RX", -1.5707963291742124, 4),
        ("RY", 0.0, 4),
        ("MS", 1.5707963267948966, [4, 1]),
        ("RX", -0.7853981632740932, 4),
        ("RY", -8.159136024436953e-09, 4),
        ("MS", 1.5707963267948966, [4, 2]),
        ("RX", -1.5707963291742124, 4),
        ("RY", 0.0, 4),
        ("MS", 1.5707963267948966, [4, 2]),
        ("RX", 0.0, 4),
        ("RY", 0.0, 4),
        ("MS", 1.5707963267948966, [4, 3]),
        ("RX", -1.5707963291742124, 4),
        ("RY", 0.0, 4),
        ("MS", 1.5707963267948966, [4, 3]),
        ("RX", 1.5707963198137818, 4),
        ("RY", 1.5707963198137818, 4),
        ("MS", 1.5707963267948966, [5, 4]),
        ("RX", -1.5707963280748842, 4),
        ("RY", 1.5707963280748842, 4),
        ("MS", 1.5707963267948966, [5, 4]),
        ("RX", -1.5707963340356508, 4),
        ("RY", -0.7853981695598105, 4),
        ("MS", 1.5707963267948966, [6, 4]),
        ("RX", -1.5707963301374783, 4),
        ("RY", 0.7853981582156461, 4),
        ("MS", 1.5707963267948966, [6, 4]),
        ("RX", -1.5707963342929192, 4),
        ("RY", -0.39269908866409564, 4),
        ("MS", 1.5707963267948966, [7, 4]),
        ("RX", -1.5707963262626867, 4),
        ("RY", 0.3926990780625495, 4),
        ("MS", 1.5707963267948966, [7, 4]),
        ("RX", -1.5707963305397592, 4),
        ("RY", 0.0, 4),
    ],
    [
        ("RX", 0.024543688364597013, 5),
        ("RY", 1.5707963173527333, 5),
        ("MS", 1.5707963267948966, [5, 0]),
        ("RX", -1.5707963291742124, 5),
        ("RY", 0.0, 5),
        ("MS", 1.5707963267948966, [5, 0]),
        ("RX", -1.3744467876706388, 5),
        ("RY", 0.0, 5),
        ("MS", 1.5707963267948966, [5, 1]),
        ("RX", -1.5707963291742124, 5),
        ("RY", 0.0, 5),
        ("MS", 1.5707963267948966, [5, 1]),
        ("RX", -1.1780972517962207, 5),
        ("RY", -7.261321924436939e-09, 5),
        ("MS", 1.5707963267948966, [5, 2]),
        ("RX", -1.5707963291742124, 5),
        ("RY", 0.0, 5),
        ("MS", 1.5707963267948966, [5, 2]),
        ("RX", -0.7853981632740932, 5),
        ("RY", -8.159136024436953e-09, 5),
        ("MS", 1.5707963267948966, [5, 3]),
        ("RX", -1.5707963291742124, 5),
        ("RY", 0.0, 5),
        ("MS", 1.5707963267948966, [5, 3]),
        ("RX", 0.0, 5),
        ("RY", 0.0, 5),
        ("MS", 1.5707963267948966, [5, 4]),
        ("RX", -1.5707963291742124, 5),
        ("RY", 0.0, 5),
        ("MS", 1.5707963267948966, [5, 4]),
        ("RX", 1.5707963198137818, 5),
        ("RY", 1.5707963198137818, 5),
        ("MS", 1.5707963267948966, [6, 5]),
        ("RX", -1.5707963280748842, 5),
        ("RY", 1.5707963280748842, 5),
        ("MS", 1.5707963267948966, [6, 5]),
        ("RX", -1.5707963340356508, 5),
        ("RY", -0.7853981695598105, 5),
        ("MS", 1.5707963267948966, [7, 5]),
        ("RX", -1.5707963301374783, 5),
        ("RY", 0.7853981582156461, 5),
        ("MS", 1.5707963267948966, [7, 5]),
        ("RX", -1.5707963305397592, 5),
        ("RY", 0.0, 5),
    ],
    [
        ("RX", 0.024543688364597013, 6),
        ("RY", 1.5707963173527333, 6),
        ("MS", 1.5707963267948966, [6, 0]),
        ("RX", -1.5707963291742124, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 0]),
        ("RX", -1.472621560366632, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 1]),
        ("RX", -1.5707963291742124, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 1]),
        ("RX", -1.3744467876706388, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 2]),
        ("RX", -1.5707963291742124, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 2]),
        ("RX", -1.1780972517962207, 6),
        ("RY", -7.261321924436939e-09, 6),
        ("MS", 1.5707963267948966, [6, 3]),
        ("RX", -1.5707963291742124, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 3]),
        ("RX", -0.7853981632740932, 6),
        ("RY", -8.159136024436953e-09, 6),
        ("MS", 1.5707963267948966, [6, 4]),
        ("RX", -1.5707963291742124, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 4]),
        ("RX", 0.0, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 5]),
        ("RX", -1.5707963291742124, 6),
        ("RY", 0.0, 6),
        ("MS", 1.5707963267948966, [6, 5]),
        ("RX", 1.5707963198137818, 6),
        ("RY", 1.5707963198137818, 6),
        ("MS", 1.5707963267948966, [7, 6]),
        ("RX", -1.5707963280748842, 6),
        ("RY", 1.5707963280748842, 6),
        ("MS", 1.5707963267948966, [7, 6]),
        ("RX", -1.5707963305397592, 6),
        ("RY", 0.0, 6),
    ],
    [
        ("RX", 0.024543688364597013, 7),
        ("RY", 1.5707963173527333, 7),
        ("MS", 1.5707963267948966, [7, 0]),
        ("RX", -1.5707963291742124, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 0]),
        ("RX", -1.5217089438626108, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 1]),
        ("RX", -1.5707963291742124, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 1]),
        ("RX", -1.472621560366632, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 2]),
        ("RX", -1.5707963291742124, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 2]),
        ("RX", -1.3744467876706388, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 3]),
        ("RX", -1.5707963291742124, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 3]),
        ("RX", -1.1780972517962207, 7),
        ("RY", -7.261321924436939e-09, 7),
        ("MS", 1.5707963267948966, [7, 4]),
        ("RX", -1.5707963291742124, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 4]),
        ("RX", -0.7853981632740932, 7),
        ("RY", -8.159136024436953e-09, 7),
        ("MS", 1.5707963267948966, [7, 5]),
        ("RX", -1.5707963291742124, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 5]),
        ("RX", 0.0, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 6]),
        ("RX", -1.5707963291742124, 7),
        ("RY", 0.0, 7),
        ("MS", 1.5707963267948966, [7, 6]),
        ("RX", 1.5707963257426107, 7),
        ("RY", -1.0366307417929838e-09, 7),
    ],
]
# initialize pointers
N = 8
idx = [0] * N
Combined = []

while any(idx[q] < len(A[q]) for q in range(N)):
    # 1) flush all ready single-qubit rotations
    made_progress = False
    for q in range(N):
        if idx[q] < len(A[q]) and A[q][idx[q]][0] in ("RX", "RY"):
            Combined.append(A[q][idx[q]])
            idx[q] += 1
            made_progress = True
    if made_progress:
        continue

    # 2) look for a matching MS at both heads
    for q in range(N):
        if idx[q] < len(A[q]) and A[q][idx[q]][0] == "MS":
            head = A[q][idx[q]]
            # find the other qubit in the tuple
            _, _, wires = head
            other = wires[0] if wires[1] == q else wires[1]
            if idx[other] < len(A[other]) and A[other][idx[other]] == head:
                Combined.append(head)
                idx[q] += 1
                idx[other] += 1
                made_progress = True
                break
    if made_progress:
        continue

    # 3) still nothing => log + abort
    print("Deadlock! queues non-empty but no ready ops.")
    print(" pointers:", idx)
    for q in range(N):
        if idx[q] < len(A[q]):
            print(f"  q={q}, head={A[q][idx[q]]}")
    raise RuntimeError("Cannot merge: no ready operations left but queues non‐empty")

print(Combined)
